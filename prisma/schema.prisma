generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asset {
  uid             Int            @id @default(autoincrement())
  assetId         Int            @unique(map: "hodler_asset_id_key") @map("asset_id")
  discordHodlerId Int?           @map("discord_hodler_id")
  collectionId    Int            @map("collection_id")
  customName      String?        @map("custom_name") @db.VarChar
  createdAt       DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime?      @updatedAt @map("updated_at")
  collection      Collection     @relation(fields: [collectionId], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "fk_collection")
  discordHodler   DiscordHodler? @relation(fields: [discordHodlerId], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "fk_hodler")

  @@map("asset")
}

model Collection {
  uid     Int     @id @default(autoincrement())
  name    String  @db.VarChar
  address String  @db.VarChar
  assets  Asset[]

  @@map("collection")
}

model FaceOfTheMonth {
  uid             Int       @id @default(autoincrement())
  assetId         Int       @map("asset_id")
  monthYear       String?   @map("month_year") @db.VarChar
  hodlerPublicKey String?   @map("hodler_public_key") @db.VarChar
  rewardAmount    Int?      @map("reward_amount")
  rewardAssetId   Int?      @map("reward_asset_id")
  createdAt       DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("face_of_the_month")
}

model DiscordHodler {
  uid         Int       @id @default(autoincrement())
  discordId   String    @unique @map("discord_id") @db.VarChar
  discordName String    @map("discord_name") @db.VarChar
  publicKey   String    @unique @map("public_key") @db.VarChar
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime? @updatedAt @map("updated_at")
  assets      Asset[]

  @@map("discord_hodler")
}
